#encoding=utf-8
"""
Django settings for TkManager project.

For more information on this file, see
https://docs.djangoproject.com/en/1.7/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.7/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

# celery
import djcelery
djcelery.setup_loader()

BROKER_URL = 'django://'

BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3564e^zg%sj9&o2v27)iw7r@8)pa8ozg@z-n72$$$h-khdy_pc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = $RST_DEBUG

# 是否允许扣款
ALLOW_DEDUCTIONS = $RST_ALLOW_DEDUCTIONS
# 是否允许下载催收报表
ALLOW_DOWNLOAD_REPORT = $RST_ALLOW_DOWNLOAD_REPORT
# 是否开启验证码登录
ALLOW_VERIFY = $RST_ALLOW_CAPTCHA_LOGIN

ALLOWED_HOSTS = ['*']

TEMPLATE_DEBUG = $RST_TEMPLATE_DEBUG

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djcelery',
    'kombu.transport.django',
    #'django_extensions',
    'django_gearman_commands',
    'corsheaders',
    'rest_framework',
    'business_manager.order',
    'business_manager.review',
    'business_manager.collection',
    'business_manager.custom',
    'business_manager.audit',
    #'business_manager.juxinli',
    'business_manager.config_center',
    'business_manager.new_order',
    'business_manager.pc_reg',
    'business_manager.custom_command',
    'business_manager.merchant',
    'business_manager.employee',
    'business_manager.import_data',
    'business_manager.strategy',
    #'debug_toolbar',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'business_manager.urls'

WSGI_APPLICATION = 'business_manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.7/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE'  : 'django.db.backends.mysql',
        'NAME'    : '$RST_MYSQL_NAME',
        'USER'    : '$RST_MYSQL_USER',
        'PASSWORD': '$RST_MYSQL_PASSWORD',
        'HOST'    : '$RST_MYSQL_HOST'
    }
}

REDIS = {
    "HOST" : "$RST_REDIS_HOST",
    "PORT" : $RST_REDIS_PORT,
    "AUTH" : "$RST_REDIS_PASSWORD",
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://{}@{}:{}/1".format(REDIS["AUTH"], REDIS["HOST"], REDIS["PORT"]),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

MONGO = {
    "HOST" : "$RST_MONGO_HOST",
    "USER" : "$RST_MONGO_USER",
    "DB"   : "$RST_MONGO_DB",
    "PORT" : $RST_MONGO_PORT,
    "AUTH" : "$RST_MONGO_PASSWORD",
}

MESSAGE_SERVER = {
    "HOST" : "$RST_MESSAGE_SERVER_HOST",
    "PORT" : $RST_MESSAGE_SERVER_PORT,
}

BANK_SERVER = {
    "HOST" : "$RST_BANK_SERVER_HOST",
    "PORT" : $RST_BANK_SERVER_PORT,
}

RISK_SERVER = {
    "HOST" : "$RST_ORDER_MANAGER_SERVER_HOST",
    "PORT" : $RST_ORDER_MANAGER_SERVER_PORT,
}

LOG_SERVER = {
    "LOG_NAME" : "$RST_LOG_NAME",
    "LOG_FILE" : "$RST_LOG_FILE.log",
    "HOST"     : "$RST_LOG_SERVER_HOST",
    "PORT"     : $RST_LOG_SERVER_PORT,
}

DATA_SERVER = {
    "ORG_NAME"   : "$RST_DATA_SERVER_ORG_NAME",
    "URL"        : "$RST_DATA_SERVER_URL",
    "SERVICE_ID" : "$RST_DATA_SERVER_SERVICE_ID"
}

USER_CENTER_SERVER = {
    'HOST': '$RST_USER_CENTER_SERVER_HOST',
    'PORT': $RST_USER_CENTER_SERVER_PORT,
}

WEB_HTTP_SERVER = {
    'HOST': '$RST_WEB_HTTP_SERVER_HOST',
    'PORT': $RST_WEB_HTTP_SERVER_PORT,
}

DATA_REPORT_SERVER = {
    'HOST'       : '$RST_DATA_REPORT_SERVER_HOST',
    'PORT'       : $RST_DATA_REPORT_SERVER_PORT,
    'REDIS'      : '$RST_DATA_REPORT_REDIS_HOST',
    'REDIS_PORT' : $RST_DATA_REPORT_REDIS_PORT,
    'REDIS_AUTH' : '$RST_DATA_REPORT_REDIS_PASSWORD',
    'REDIS_DB'   : $RST_DATA_REPORT_REDIS_DB
}

BUSINESS_PLATFORM = '$RST_BUSINESS_PLATFORM'
BUSINESS_PRODUCT  = '$RST_BUSINESS_PRODUCT'

IMAGE_SERVER_URL  = '$RST_IMAGE_SERVER_URL'

LANGUAGE_CODE = 'zh_CN'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

STATICFILES_DIRS = (
    os.path.join(os.path.dirname(__file__),'static/').replace('\\','/'),
)

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
    #'django.template.loaders.eggs.Loader',
)

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(os.path.dirname(__file__),'template').replace('\\','/'),
)

CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = ($RST_ORIGIN_WHITELIST)


TEMPLATE_CONTEXT_PROCESSORS =(
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    )

LOGIN_REDIRECT_URL = '/'

DEBUG_TOOLBAR_PATCH_SETTINGS = $RST_DEBUG

# init log
from business_manager.python_common.log_client import CommonLog as Log
import logging

host = LOG_SERVER["HOST"]
port = LOG_SERVER["PORT"]
name = LOG_SERVER["LOG_NAME"]
filename = LOG_SERVER["LOG_FILE"]
Log().init_log_include_local_file(name, "DEBUG", host, port, filename, 1024)
Log().info("init settings done.")

REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication'],
    'DEFAULT_PERMISSION_CLASSES': ['rest_framework.permissions.AllowAny'],
    'EXCEPTION_HANDLER': 'business_manager.import_data.services.cute_exception_handler',
    'PAGE_SIZE': 1000,
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S'
}

IMPORT_DATA = {
    "module_name": "import"
}

MEDIA_ROOT = BASE_DIR + "/media/"
MEDIA_URL = "media/"
BROKER_URL = "redis://{}@{}:{}/1".format(REDIS['AUTH'], REDIS['HOST'], REDIS['PORT']) 

WX_SESSION_TIMEOUT_S = $RST_WX_SESSION_TIMEOUT_S   #1800

DOMAIN = '$RST_DOMAIN'
